name: Build and Release

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    name: Test
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up GraalVM 21
        uses: actions/setup-java@v4
        with:
          distribution: graalvm
          java-version: '21'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Run tests
        run: ./gradlew test --no-daemon

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: junit-results
          path: '**/build/test-results/test/*.xml'

  package:
    name: Build Artifacts
    needs: test
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-22.04
            suffix: linux-x64
          - os: macos-13
            suffix: macos-x64
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up GraalVM 21
        uses: actions/setup-java@v4
        with:
          distribution: graalvm
          java-version: '21'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build artifacts
        env:
          ARTIFACT_NAME: kapture-${{ matrix.suffix }}
        run: |
          ./gradlew :cli:nativeCompile --no-daemon
          mkdir -p dist
          cp cli/build/native/nativeCompile/kapture "dist/${ARTIFACT_NAME}"
          chmod +x "dist/${ARTIFACT_NAME}"
          python - <<'PY'
import hashlib
import pathlib
import os

artifact = pathlib.Path('dist') / os.environ['ARTIFACT_NAME']
checksum = hashlib.sha256(artifact.read_bytes()).hexdigest()
target = artifact.parent / f"{artifact.name}.sha256"
target.write_text(f"{checksum}  {artifact.name}\n")
PY

      - name: Upload distribution artifact
        uses: actions/upload-artifact@v4
        with:
          name: kapture-${{ matrix.suffix }}
          path: dist

  release:
    name: Publish Release
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    needs: package
    runs-on: ubuntu-22.04

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Prepare release assets
        run: |
          mkdir -p dist
          find artifacts -maxdepth 2 -type f -print -exec cp {} dist/ \;
          ls -al dist

      - name: Publish GitHub release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
